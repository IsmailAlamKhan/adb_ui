name: Build Mac OS
on:
  workflow_call:
    inputs:
      version:
        description: "Version"
        required: true
        default: "0.0.0"
        type: string
      release-upload-url:
        description: "Release upload URL"
        required: true
        type: string
      app-name:
        description: "Application name"
        required: true
        type: string

jobs:
  build:
    runs-on: macos-latest
    env:
      RELEASE_PATH: build/macos/Build/Products/Release
      APPNAME: ${{ inputs.app-name }}
      VERSION: ${{ inputs.version }}

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2.4.0

      - name: Install node
        uses: actions/setup-node@master

      - name: Instal appdmg
        run: npm install -g appdmg

      - name: Install the Apple certificate and provisioning profile
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.BUILD_PROVISION_PROFILE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode --output $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode --output $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Build Mac app
        run: flutter build macos --release

      - name: Make .dmg file
        run: |
          appdmg Installers/dmg_creator/config.json ${{ github.workspace }}/${{env.RELEASE_PATH}}/${{env.APPNAME}}-setup-macos.dmg

      - name: upload to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ inputs.release-upload-url }}
          asset_path: ${{ github.workspace }}/${{env.RELEASE_PATH}}/${{env.APPNAME}}-setup-macos.dmg
          asset_name: ${{env.APPNAME}}-setup-macos.dmg
          asset_content_type: application/zip
